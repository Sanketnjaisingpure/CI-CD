Agenda --

STAGES OF GIT TO PULL FILES 
1.ADD
2.COMMIT
3.PUSH


1) - Set up the Github  { It is a repo for commiting our code}
	a) set up the new enviroment
	b) setup.py
	c) requirement.txt

1) - go to anaconda prompt  and paste the path 
2) - type code. :-  it will open the vs code
3) - from that open terminal
4) - type to create enviroment conda create -p cicd python==3.10 -y
To deactivate an active environment, use
#
#     $ conda deactivate

to active use -- conda activate cicd/
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/Sanketnjaisingpure/CI-CD.git
git push -u origin main

Then I Created the .gitignore file in the github and pull it using
git pull command

Then I have Created setup.py file 
 -- The Setup Script is the centre of all activity in building , distributing and installing modules using Distutils
 -- The main purpose of the setup is to describe your modules distribution to the Distutils

OUR ENTIRE PROJECT IN HAPPENING IN THE src file
 then i Created src (source folder) in that i Created another folder called components in that i have Created 
 __init__.py file

 and in src also i have created __init__.py file

 Here What is the need of components folder
Cause components will be created as packages and will be imported to some other file locations

then i have Created a python file data_ingestion 
data_ingestion means reading a data from a specific  database that can be our component
# this file have all the code used to read the data

Then my next step will be data Transformation any code related with the Transformation we have to write in the
data_transformation python file

After doing the data Transformation
then we are going to train the model in the model_training.py python file

then i have created a folder pipelines
in that i have created a train_pipeline.py python file for training 
and for testing i have created predict_pipeline.py python file 

Then i have created three important file called
logger.py for logging 
exceptions.py for all the exceptions handling
utils.py for any functionality that used in the common way 